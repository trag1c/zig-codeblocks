[
    {
        "kind": "const",
        "range": [0, 5]
    },
    {
        "kind": "identifier",
        "value": "std",
        "range": [6, 9]
    },
    {
        "kind": "=",
        "range": [10, 11]
    },
    {
        "kind": "builtin_identifier",
        "value": "@import",
        "range": [12, 19]
    },
    {
        "kind": "(",
        "range": [19, 20]
    },
    {
        "kind": "\"",
        "range": [20, 21]
    },
    {
        "kind": "string_content",
        "value": "std",
        "range": [21, 24]
    },
    {
        "kind": "\"",
        "range": [24, 25]
    },
    {
        "kind": ")",
        "range": [25, 26]
    },
    {
        "kind": ";",
        "range": [26, 27]
    },
    {
        "kind": "const",
        "range": [28, 33]
    },
    {
        "kind": "identifier",
        "value": "expect",
        "range": [34, 40]
    },
    {
        "kind": "=",
        "range": [41, 42]
    },
    {
        "kind": "identifier",
        "value": "std",
        "range": [43, 46]
    },
    {
        "kind": ".",
        "range": [46, 47]
    },
    {
        "kind": "identifier",
        "value": "testing",
        "range": [47, 54]
    },
    {
        "kind": ".",
        "range": [54, 55]
    },
    {
        "kind": "identifier",
        "value": "expect",
        "range": [55, 61]
    },
    {
        "kind": ";",
        "range": [61, 62]
    },
    {
        "kind": "comptime",
        "range": [64, 72]
    },
    {
        "kind": "{",
        "range": [73, 74]
    },
    {
        "kind": "asm",
        "range": [79, 82]
    },
    {
        "kind": "(",
        "range": [83, 84]
    },
    {
        "kind": "multiline_string",
        "value": "\\\\.global my_func;\n        \\\\.type my_func, @function;\n        \\\\my_func:\n        \\\\  lea (%rdi,%rsi,1),%eax\n        \\\\  retq",
        "range": [93, 218]
    },
    {
        "kind": ")",
        "range": [223, 224]
    },
    {
        "kind": ";",
        "range": [224, 225]
    },
    {
        "kind": "}",
        "range": [226, 227]
    },
    {
        "kind": "extern",
        "range": [229, 235]
    },
    {
        "kind": "fn",
        "range": [236, 238]
    },
    {
        "kind": "identifier",
        "value": "my_func",
        "range": [239, 246]
    },
    {
        "kind": "(",
        "range": [246, 247]
    },
    {
        "kind": "identifier",
        "value": "a",
        "range": [247, 248]
    },
    {
        "kind": ":",
        "range": [248, 249]
    },
    {
        "kind": "builtin_type",
        "value": "i32",
        "range": [250, 253]
    },
    {
        "kind": ",",
        "range": [253, 254]
    },
    {
        "kind": "identifier",
        "value": "b",
        "range": [255, 256]
    },
    {
        "kind": ":",
        "range": [256, 257]
    },
    {
        "kind": "builtin_type",
        "value": "i32",
        "range": [258, 261]
    },
    {
        "kind": ")",
        "range": [261, 262]
    },
    {
        "kind": "builtin_type",
        "value": "i32",
        "range": [263, 266]
    },
    {
        "kind": ";",
        "range": [266, 267]
    },
    {
        "kind": "test",
        "range": [269, 273]
    },
    {
        "kind": "\"",
        "range": [274, 275]
    },
    {
        "kind": "string_content",
        "value": "global assembly",
        "range": [275, 290]
    },
    {
        "kind": "\"",
        "range": [290, 291]
    },
    {
        "kind": "{",
        "range": [292, 293]
    },
    {
        "kind": "try",
        "range": [298, 301]
    },
    {
        "kind": "identifier",
        "value": "expect",
        "range": [302, 308]
    },
    {
        "kind": "(",
        "range": [308, 309]
    },
    {
        "kind": "identifier",
        "value": "my_func",
        "range": [309, 316]
    },
    {
        "kind": "(",
        "range": [316, 317]
    },
    {
        "kind": "integer",
        "value": "12",
        "range": [317, 319]
    },
    {
        "kind": ",",
        "range": [319, 320]
    },
    {
        "kind": "integer",
        "value": "34",
        "range": [321, 323]
    },
    {
        "kind": ")",
        "range": [323, 324]
    },
    {
        "kind": "==",
        "range": [325, 327]
    },
    {
        "kind": "integer",
        "value": "46",
        "range": [328, 330]
    },
    {
        "kind": ")",
        "range": [330, 331]
    },
    {
        "kind": ";",
        "range": [331, 332]
    },
    {
        "kind": "}",
        "range": [333, 334]
    }
]
